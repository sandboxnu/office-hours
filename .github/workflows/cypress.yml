name: Cypress

on:
  push:
    branches: master
  pull_request:
    branches: [master, hybrid-queues, updated-login]

jobs:
  cypress-tests:
    name: E2E Tests
    runs-on: ubuntu-latest
    container:
      image: cypress/browsers:chrome67
      options: --shm-size=2g
    services:
      postgres:
        image: postgres:11.5
        env:
          POSTGRES_DB: dev
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD:
        # needed because the postgres container does not provide a healthcheck
        options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5
        ports:
          - 5432:5432
      redis:
        image: redis
        ports:
          - 6379:6379
    steps:
      - name: Checkout
        uses: actions/checkout@v1
      - uses: bahmutov/npm-install@v1
      - run: yarn build
      - name: Cypress run
        uses: cypress-io/github-action@v2
        with:
          record: ${{ github.event_name == 'pull_request' }}
          start: yarn ci:start
          wait-on: "http://localhost:3000"
          browser: chrome
          command-prefix: "yarn run percy exec"
        env:
          CYPRESS_USE_LIVE_API: true
          CYPRESS_RECORD_KEY: ${{ secrets.CYPRESS_RECORD_KEY }}
          PERCY_TOKEN: ${{ secrets.PERCY_TOKEN }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      # after the test run completes
      # store videos and any screenshots
      # NOTE: screenshots will be generated only if E2E test failed
      # thus we store screenshots only on failures
      - uses: actions/upload-artifact@v1
        if: failure()
        with:
          name: cypress-screenshots
          path: cypress/screenshots
      # Test run video was always captured, so this action uses "always()" condition
      - uses: actions/upload-artifact@v1
        if: always()
        with:
          name: cypress-videos
          path: cypress/videos
